% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_ridl.R
\name{add_ridl}
\alias{add_ridl}
\title{Archive all crunching files in RIDL}
\usage{
add_ridl(ridl, datafolder, cleaned_data, cleaning_log, namethisfile)
}
\arguments{
\item{ridl}{ridl container where the resources should be added}

\item{datafolder}{folder where the data used by the notebook are stored}

\item{cleaned_data}{names of the file with the cleaned data}

\item{cleaning_log}{names of the file with the cleaning_log}

\item{namethisfile}{all files are archived based on the name of notebook you created.
The function automatically get the name of the notebook where it is run from,
using
basename(rstudioapi::getSourceEditorContext()$path )}
}
\value{
nothing all analysis files are added as a resources
}
\description{
RIDL is UNHCR instance of a CKAN server and is accessible for UNHCR staff at
https://ridl.unhcr.org . It is designed to keep track and
document dataset within an organisation.
}
\details{
You conveniently archive there your generated cleaning report and save
the work you did on a notebook: As you have been working on the data, you want
to keep track of it and save your work in a place where it can be useful for
other people and available for peer review and quality assessment.

The function saves within the  the RIDL container you used to get the data
from the following resources:
\itemize{
\item the source notebook
\item the cleaning log
\item the cleaned data
}

The function behavior is the following -
\enumerate{
\item Get metadata from the RIDL dataset
\item check if the resources to be uploaded is already shared based on the name
\item if already there update, if not create
}

The function relies on   # install.packages("pak")
# pak::pkg_install("edouard-legoupil/riddle")
}
\examples{
\dontrun{
### Example used for each template
## Time to archive your work once done!!
# namethisfile = basename(rstudioapi::getSourceEditorContext()$path )
# if( params$publish == "yes"){
#   add_ridl(ridl = params$ridl,
#             datafolder = params$datafolder,
#             form = params$form,
#             namethisfile =  namethisfile ) }

}
}
\keyword{internal}
